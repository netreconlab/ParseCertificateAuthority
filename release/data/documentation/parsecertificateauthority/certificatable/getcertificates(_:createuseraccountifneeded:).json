{
  "abstract" : [
    {
      "text" : "Get\/create certificates if an object is missing them.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/edu.uky.cs.netreconlab.ParseCertificateAuthority\/documentation\/ParseCertificateAuthority",
        "doc:\/\/edu.uky.cs.netreconlab.ParseCertificateAuthority\/documentation\/ParseCertificateAuthority\/Certificatable"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/edu.uky.cs.netreconlab.ParseCertificateAuthority\/documentation\/ParseCertificateAuthority\/Certificatable\/getCertificates(_:createUserAccountIfNeeded:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "ParseCertificateAuthority",
    "externalID" : "s:25ParseCertificateAuthority14CertificatablePAAE15getCertificates_25createUserAccountIfNeededSSSg_AFtAF_SbtYaKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "getCertificates"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "createUserAccountIfNeeded"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> ("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : "?)"
      }
    ],
    "modules" : [
      {
        "name" : "ParseCertificateAuthority"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "getCertificates(_:createUserAccountIfNeeded:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "getCertificates"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "userId"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : "?, "
            },
            {
              "kind" : "externalParam",
              "text" : "createUserAccountIfNeeded"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : " = true) "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> ("
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : "?, "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : "?)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A tuple where the first item is the user certificate and the second item is the root certificate.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The unique user id to create the certificate for.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "userId"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "If ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "true",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : ", attempts to create an",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "account for the ",
                  "type" : "text"
                },
                {
                  "code" : "userId",
                  "type" : "codeVoice"
                },
                {
                  "text" : " if the account currently does not exist. If ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "false",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : " and the",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "account does not exist, will throw an error. Defaults to ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "true",
                      "type" : "text"
                    }
                  ],
                  "type" : "strong"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "createUserAccountIfNeeded"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "An error of ",
                  "type" : "text"
                },
                {
                  "code" : "ParseError",
                  "type" : "codeVoice"
                },
                {
                  "text" : " type.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Throws",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "This is useful when certificates need to be created for the first time. If an object",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "already has both certificates, it will simply return the current certificates.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/parsecertificateauthority\/certificatable\/getcertificates(_:createuseraccountifneeded:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://edu.uky.cs.netreconlab.ParseCertificateAuthority/documentation/ParseCertificateAuthority": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCertificateAuthority\/documentation\/ParseCertificateAuthority",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ParseCertificateAuthority",
  "type" : "topic",
  "url" : "\/documentation\/parsecertificateauthority"
},
"doc://edu.uky.cs.netreconlab.ParseCertificateAuthority/documentation/ParseCertificateAuthority/Certificatable": {
  "abstract" : [
    {
      "text" : "Objects that conform to the ",
      "type" : "text"
    },
    {
      "code" : "Certificatable",
      "type" : "codeVoice"
    },
    {
      "text" : " protocol have special properties",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and methods to support certificates and communicating with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/github.com\/netreconlab\/ca-server",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Certificatable"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCertificateAuthority\/documentation\/ParseCertificateAuthority\/Certificatable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Certificatable"
    }
  ],
  "role" : "symbol",
  "title" : "Certificatable",
  "type" : "topic",
  "url" : "\/documentation\/parsecertificateauthority\/certificatable"
},
"doc://edu.uky.cs.netreconlab.ParseCertificateAuthority/documentation/ParseCertificateAuthority/Certificatable/getCertificates(_:createUserAccountIfNeeded:)": {
  "abstract" : [
    {
      "text" : "Get\/create certificates if an object is missing them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "getCertificates"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "createUserAccountIfNeeded"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/edu.uky.cs.netreconlab.ParseCertificateAuthority\/documentation\/ParseCertificateAuthority\/Certificatable\/getCertificates(_:createUserAccountIfNeeded:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "getCertificates(_:createUserAccountIfNeeded:)",
  "type" : "topic",
  "url" : "\/documentation\/parsecertificateauthority\/certificatable\/getcertificates(_:createuseraccountifneeded:)"
},
"https://github.com/netreconlab/ca-server": {
  "identifier" : "https:\/\/github.com\/netreconlab\/ca-server",
  "title" : "ca-server",
  "titleInlineContent" : [
    {
      "text" : "ca-server",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/netreconlab\/ca-server"
}
}
}